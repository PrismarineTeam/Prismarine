From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlphaKR93 <alphakr93@outlook.com>
Date: Sun, 24 Apr 2022 18:12:29 +0900
Subject: [PATCH] EntityBreedPrepareEvent


diff --git a/src/main/java/net/prismarineteam/prismarine/event/entity/EntityBreedPrepareEvent.java b/src/main/java/net/prismarineteam/prismarine/event/entity/EntityBreedPrepareEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..0d1cc7a64f1a0778d39045fe771c501b298a9a30
--- /dev/null
+++ b/src/main/java/net/prismarineteam/prismarine/event/entity/EntityBreedPrepareEvent.java
@@ -0,0 +1,68 @@
+package net.prismarineteam.prismarine.event.entity;
+
+import org.bukkit.entity.LivingEntity;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.entity.EntityEvent;
+import org.bukkit.inventory.ItemStack;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+public class EntityBreedPrepareEvent extends EntityEvent implements Cancellable {
+    private static final HandlerList HANDLER_LIST = new HandlerList();
+    
+    private boolean cancelled;
+    private final LivingEntity entity;
+    private LivingEntity target;
+    private final LivingEntity breeder;
+    private final ItemStack bredWith;
+    
+    public EntityBreedPrepareEvent(@NotNull LivingEntity entity, @NotNull LivingEntity target, @Nullable LivingEntity breeder, @Nullable ItemStack bredWith) {
+        super(entity);
+        this.entity = entity;
+        this.target = target;
+        this.breeder = breeder;
+        this.bredWith = bredWith;
+    }
+    
+    @NotNull
+    public LivingEntity getEntity() {
+        return entity;
+    }
+    
+    @NotNull
+    public LivingEntity getTarget() {
+        return target;
+    }
+    
+    @Nullable
+    public LivingEntity getBreeder() {
+        return breeder;
+    }
+
+    @Nullable
+    public ItemStack getBredWith() {
+        return bredWith;
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancel) {
+        this.cancelled = cancel;
+    }
+
+    @NotNull
+    @Override
+    public HandlerList getHandlers() {
+        return HANDLER_LIST;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return HANDLER_LIST;
+    }
+}
