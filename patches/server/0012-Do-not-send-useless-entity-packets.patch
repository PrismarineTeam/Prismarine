From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Alpha <alphakr93@outlook.com>
Date: Wed, 19 Jan 2022 23:18:02 +0900
Subject: [PATCH] Do not send useless entity packets

Original by William Blake Galbreath <Blake.Galbreath@GMail.com>
(PurpurMC Team)

Copyright (c) 2022 PurpurMC LLC

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

diff --git a/src/main/java/net/minecraft/server/level/ServerEntity.java b/src/main/java/net/minecraft/server/level/ServerEntity.java
index 6760ef1dee40fb6bff29415c3ac33bab5ff22b10..ccd597b01de14af4aafc7664f43ad83424139998 100644
--- a/src/main/java/net/minecraft/server/level/ServerEntity.java
+++ b/src/main/java/net/minecraft/server/level/ServerEntity.java
@@ -181,6 +181,7 @@ public class ServerEntity {
                         this.teleportDelay = 0;
                         packet1 = new ClientboundTeleportEntityPacket(this.entity);
                     }
+                    if (net.prismarineteam.prismarine.PrismarineConfig.doNotSendUselessEntityPackets && isUselessEntityPacket(packet1)) packet1 = null; // Prismarine
                 }
 
                 if ((this.trackDelta || this.entity.hasImpulse || this.entity instanceof LivingEntity && ((LivingEntity) this.entity).isFallFlying()) && this.tickCount > 0) {
@@ -247,6 +248,22 @@ public class ServerEntity {
 
     }
 
+    // Prismarine start
+    private boolean isUselessEntityPacket(Packet<?> possibleUselessEntityPacket) {
+        if (possibleUselessEntityPacket instanceof ClientboundMoveEntityPacket) {
+            ClientboundMoveEntityPacket p = (ClientboundMoveEntityPacket) possibleUselessEntityPacket;
+            if (possibleUselessEntityPacket instanceof ClientboundMoveEntityPacket.Pos) {
+                return p.getXa() == 0 && p.getYa() == 0 && p.getZa() == 0;
+            } else if (possibleUselessEntityPacket instanceof ClientboundMoveEntityPacket.PosRot) {
+                return p.getXa() == 0 && p.getYa() == 0 && p.getZa() == 0 && p.getxRot() == 0 && p.getyRot() == 0;
+            } else if (possibleUselessEntityPacket instanceof ClientboundMoveEntityPacket.Rot) {
+                return p.getxRot() == 0 && p.getyRot() == 0;
+            }
+        }
+        return false;
+    }
+    // Prismarine end
+
     public void removePairing(ServerPlayer player) {
         this.entity.stopSeenByPlayer(player);
         ((ServerLevel) this.entity.level).chunkSource.chunkMap.runOnTrackerMainThread(() -> player.connection.send(new ClientboundRemoveEntitiesPacket(new int[]{this.entity.getId()}))); // Prismarine - Petal patches (ensure main thread)
diff --git a/src/main/java/net/prismarineteam/prismarine/PrismarineConfig.java b/src/main/java/net/prismarineteam/prismarine/PrismarineConfig.java
index da4b140a10687dde0e40da12baf68d63cfb2271e..2f3e794fcec9efe5ce3cae27b328644c2fd8132e 100644
--- a/src/main/java/net/prismarineteam/prismarine/PrismarineConfig.java
+++ b/src/main/java/net/prismarineteam/prismarine/PrismarineConfig.java
@@ -200,4 +200,9 @@ public class PrismarineConfig {
     private static void useAsyncExecutorAtAuthencatorPool() {
         useAsyncExecutorAtAuthencatorPool = getBoolean("settings.use-async-executor-at-authencator-pool", useAsyncExecutorAtAuthencatorPool);
     }
+
+    public static boolean doNotSendUselessEntityPackets = true;
+    private static void doNotSendUselessEntityPackets() {
+        doNotSendUselessEntityPackets = getBoolean("settings.do-not-send-useless-entity-packets", doNotSendUselessEntityPackets);
+    }
 }
\ No newline at end of file
