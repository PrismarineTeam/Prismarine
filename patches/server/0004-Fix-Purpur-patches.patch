From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlphaKR93 <alphakr93@outlook.com>
Date: Sun, 24 Jul 2022 18:57:05 +0900
Subject: [PATCH] Fix Purpur patches


diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 13c9cddf7ac0af16676050e3bcdf22b7475a0387..a2b3875dfb70011e0df517813590a96fff28f662 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -942,7 +942,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
 
         MinecraftServer.LOGGER.info("Stopping server");
         Commands.COMMAND_SENDING_POOL.shutdownNow(); // Paper - Shutdown and don't bother finishing
-        MinecraftTimings.stopServer(); // Paper
+        //MinecraftTimings.stopServer(); // Paper // Prismarine
         // Purpur start
         if (upnp) {
             if (dev.omega24.upnp4j.UPnP4J.close(this.getPort(), dev.omega24.upnp4j.util.Protocol.TCP)) {
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index a029f51983bcfe49beab1359f282f0f957723ef2..3ea565a2b1cbf564f69f463347e60d7bfa6813e3 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -222,7 +222,7 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
         org.spigotmc.WatchdogThread.doStart(org.spigotmc.SpigotConfig.timeoutTime, org.spigotmc.SpigotConfig.restartOnCrash);
         thread.start(); // Paper - start console thread after MinecraftServer.console & PaperConfig are initialized
         io.papermc.paper.command.PaperCommands.registerCommands(this);
-        com.destroystokyo.paper.Metrics.PaperMetrics.startMetrics();
+        //com.destroystokyo.paper.Metrics.PaperMetrics.startMetrics();
         // Purpur start
         try {
             org.purpurmc.purpur.PurpurConfig.init((java.io.File) options.valueOf("purpur-settings"));
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 571a1cbee376032b6b9f36c9fe3f9199a3ad3197..e804051c2ce3e3a4ce0efe5d48931c4d1e189c92 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -971,7 +971,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
             return holder.is(PoiTypes.LIGHTNING_ROD);
         }, (blockposition1) -> {
             return blockposition1.getY() == this.getHeight(Heightmap.Types.WORLD_SURFACE, blockposition1.getX(), blockposition1.getZ()) - 1;
-        }, pos, org.purpurmc.purpur.PurpurConfig.lightningRodRange, PoiManager.Occupancy.ANY);
+        }, pos, org.purpurmc.purpur.PurpurConfig.lightningRodRange, PoiManager.Occupancy.ANY); // Purpur // Prismarine - Mark
 
         return optional.map((blockposition1) -> {
             return blockposition1.above(1);
@@ -1020,7 +1020,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
         if (this.canSleepThroughNights()) {
             if (!this.getServer().isSingleplayer() || this.getServer().isPublished()) {
                 int i = this.getGameRules().getInt(GameRules.RULE_PLAYERS_SLEEPING_PERCENTAGE);
-                Component ichatmutablecomponent;
+                Component ichatmutablecomponent; // Purpur // Prismarine - Mark
 
                 if (this.sleepStatus.areEnoughSleeping(i)) {
                     // Purpur start
diff --git a/src/main/java/net/minecraft/world/entity/animal/allay/Allay.java b/src/main/java/net/minecraft/world/entity/animal/allay/Allay.java
index 4e77bb2be5a35bc6b002e2eae4af41937187ba0d..d0f4e1556e606d916f7f9d511a1fb2ddee7d9ab2 100644
--- a/src/main/java/net/minecraft/world/entity/animal/allay/Allay.java
+++ b/src/main/java/net/minecraft/world/entity/animal/allay/Allay.java
@@ -153,6 +153,13 @@ public class Allay extends PathfinderMob implements InventoryCarrier {
     protected void registerGoals() {
         this.goalSelector.addGoal(0, new org.purpurmc.purpur.entity.ai.HasRider(this)); // Purpur
     }
+
+    // Prismarine start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig.allayMaxHealth);
+    }
+    // Prismarine end
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/frog/Frog.java b/src/main/java/net/minecraft/world/entity/animal/frog/Frog.java
index 22f8db91f31be6a6d981c70e2ab94d031723ac9c..55a36e1573058175c45a2c0ac4978b7b96a9fda0 100644
--- a/src/main/java/net/minecraft/world/entity/animal/frog/Frog.java
+++ b/src/main/java/net/minecraft/world/entity/animal/frog/Frog.java
@@ -144,6 +144,13 @@ public class Frog extends Animal {
     public int getPurpurBreedTime() {
         return this.level.purpurConfig.frogBreedingTicks;
     }
+
+    // Prismarine start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig.frogMaxHealth);
+    }
+    // Prismarine end
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/animal/frog/Tadpole.java b/src/main/java/net/minecraft/world/entity/animal/frog/Tadpole.java
index 5268a56a7967275df63f5a5ddb59219904f9a3c4..47ab079c1d1bd7ffc223f8086a74ecda4665e1f6 100644
--- a/src/main/java/net/minecraft/world/entity/animal/frog/Tadpole.java
+++ b/src/main/java/net/minecraft/world/entity/animal/frog/Tadpole.java
@@ -86,6 +86,13 @@ public class Tadpole extends AbstractFish {
     protected void registerGoals() {
         this.goalSelector.addGoal(0, new org.purpurmc.purpur.entity.ai.HasRider(this)); // Purpur
     }
+
+    // Prismarine start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig.tadpoleMaxHealth);
+    }
+    // Prismarine end
     // Purpur end
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/warden/Warden.java b/src/main/java/net/minecraft/world/entity/monster/warden/Warden.java
index 5dab2eea9e9c50e41c7971daefc3bbe819583207..7d310183e7715aac4f442948ef210b4725c2ef59 100644
--- a/src/main/java/net/minecraft/world/entity/monster/warden/Warden.java
+++ b/src/main/java/net/minecraft/world/entity/monster/warden/Warden.java
@@ -144,6 +144,13 @@ public class Warden extends Monster implements VibrationListener.VibrationListen
         this.goalSelector.addGoal(0, new org.purpurmc.purpur.entity.ai.HasRider(this)); // Purpur
         this.targetSelector.addGoal(0, new org.purpurmc.purpur.entity.ai.HasRider(this)); // Purpur
     }
+
+    // Prismarine start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.level.purpurConfig.wardenMaxHealth);
+    }
+    // Prismarine end
     // Purpur end
 
     @Override
diff --git a/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java b/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
index a6356d19f0fc664be523f19c2ea1704191a7a73a..d3387f68b37a28331f3f28fe2162916d00869d1d 100644
--- a/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
+++ b/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
@@ -1042,12 +1042,14 @@ public class PurpurWorldConfig {
     public boolean allayRidableInWater = false;
     public boolean allayControllable = true;
     public List<String> allayRespectNBT = new ArrayList<>();
+    public double allayMaxHealth = 20.0D; // Prismarine
     private void allaySettings() {
         allayRidable = getBoolean("mobs.allay.ridable", allayRidable);
         allayRidableInWater = getBoolean("mobs.allay.ridable-in-water", allayRidableInWater);
         allayControllable = getBoolean("mobs.allay.controllable", allayControllable);
         allayRespectNBT.clear();
         getList("mobs.allay.respect-nbt", new ArrayList<>()).forEach(key -> allayRespectNBT.add(key.toString()));
+        allayMaxHealth = getDouble("mobs.allay.max-health", allayMaxHealth); // Prismarine
     }
 
     public boolean axolotlRidable = false;
@@ -1561,12 +1563,14 @@ public class PurpurWorldConfig {
     public boolean frogControllable = true;
     public float frogRidableJumpHeight = 0.65F;
     public int frogBreedingTicks = 6000;
+    public double frogMaxHealth = 10.0D; // Prismarine
     private void frogSettings() {
         frogRidable = getBoolean("mobs.frog.ridable", frogRidable);
         frogRidableInWater = getBoolean("mobs.frog.ridable-in-water", frogRidableInWater);
         frogControllable = getBoolean("mobs.frog.controllable", frogControllable);
         frogRidableJumpHeight = (float) getDouble("mobs.frog.ridable-jump-height", frogRidableJumpHeight);
         frogBreedingTicks = getInt("mobs.frog.breeding-delay-ticks", frogBreedingTicks);
+        frogMaxHealth = getDouble("mobs.frog.attributes.max_health", frogMaxHealth); // Prismarine
     }
 
     public boolean ghastRidable = false;
@@ -2614,10 +2618,12 @@ public class PurpurWorldConfig {
     public boolean tadpoleRidable = false;
     public boolean tadpoleRidableInWater = false;
     public boolean tadpoleControllable = true;
+    public double tadpoleMaxHealth = 6.0D; // Prismarine
     private void tadpoleSettings() {
         tadpoleRidable = getBoolean("mobs.tadpole.ridable", tadpoleRidable);
         tadpoleRidableInWater = getBoolean("mobs.tadpole.ridable-in-water", tadpoleRidableInWater);
         tadpoleControllable = getBoolean("mobs.tadpole.controllable", tadpoleControllable);
+        tadpoleMaxHealth = getDouble("mobs.tadpole.attributes.max_health", tadpoleMaxHealth); // Prismarine
     }
 
     public boolean traderLlamaRidable = false;
@@ -2828,10 +2834,12 @@ public class PurpurWorldConfig {
     public boolean wardenRidable = false;
     public boolean wardenRidableInWater = false;
     public boolean wardenControllable = true;
+    public double wardenMaxHealth = 500.0D; // Prismarine
     private void wardenSettings() {
         wardenRidable = getBoolean("mobs.warden.ridable", wardenRidable);
         wardenRidableInWater = getBoolean("mobs.warden.ridable-in-water", wardenRidableInWater);
         wardenControllable = getBoolean("mobs.warden.controllable", wardenControllable);
+        wardenMaxHealth = getDouble("mobs.warden.attributes.max_health", wardenMaxHealth); // Prismarine
     }
 
     public boolean witchRidable = false;
