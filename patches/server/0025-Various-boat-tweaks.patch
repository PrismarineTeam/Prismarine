From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlphaKR93 <alphakr93@outlook.com>
Date: Sat, 27 Aug 2022 14:20:08 +0900
Subject: [PATCH] Various boat tweaks


diff --git a/src/main/java/net/minecraft/world/entity/vehicle/Boat.java b/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
index ed260c5f8cdf9027ad95c81cb84bb91879647836..75dce07b3b4b52361deacdfa1eb911e8d060d7d4 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
@@ -879,13 +879,27 @@ public class Boat extends Entity {
         return player.isSecondaryUseActive() ? InteractionResult.PASS : (this.outOfControlTicks < 60.0F ? (!this.level.isClientSide ? (player.startRiding(this) ? InteractionResult.CONSUME : InteractionResult.PASS) : InteractionResult.SUCCESS) : InteractionResult.PASS);
     }
 
+    // Prismarine start
+    protected void dropLoots() {
+        int i;
+
+        for (i = 0; i < 3; ++i) {
+            this.spawnAtLocation((ItemLike) this.getBoatType().getPlanks());
+        }
+
+        for (i = 0; i < 2; ++i) {
+            this.spawnAtLocation((ItemLike) Items.STICK);
+        }
+    }
+    // Prismarine end
+
     @Override
     protected void checkFallDamage(double heightDifference, boolean onGround, BlockState state, BlockPos landedPosition) {
         this.lastYd = this.getDeltaMovement().y;
         if (!this.isPassenger()) {
             if (onGround) {
                 if (this.fallDistance > 3.0F) {
-                    if (this.status != Boat.Status.ON_LAND) {
+                    if (this.level.prismarineConfig.boatBreakWhenLand ? false : this.status != Boat.Status.ON_LAND) { // Prismarine - Break boats when land
                         this.resetFallDistance();
                         return;
                     }
@@ -899,15 +913,7 @@ public class Boat extends Entity {
                     if (!destroyEvent.isCancelled()) {
                         this.kill();
                         if (this.level.getGameRules().getBoolean(GameRules.RULE_DOENTITYDROPS)) {
-                            int i;
-
-                            for (i = 0; i < 3; ++i) {
-                                this.spawnAtLocation((ItemLike) this.getBoatType().getPlanks());
-                            }
-
-                            for (i = 0; i < 2; ++i) {
-                                this.spawnAtLocation((ItemLike) Items.STICK);
-                            }
+                            this.dropLoots(); // Prismarine
                         }
                     }
                     } // CraftBukkit end
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/ChestBoat.java b/src/main/java/net/minecraft/world/entity/vehicle/ChestBoat.java
index ba14657c6911bfd54da6ee9e248b3a050455d68a..3ac698a2c24bfdeb0b0433c0978f6ef7636bbb97 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/ChestBoat.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/ChestBoat.java
@@ -96,6 +96,23 @@ public class ChestBoat extends Boat implements HasCustomInventoryScreen, Contain
         return this.canAddPassenger(player) && !player.isSecondaryUseActive() ? super.interact(player, hand) : this.interactWithChestVehicle(this::gameEvent, player);
     }
 
+    // Prismarine start
+    @Override
+    protected void dropLoots() {
+        int i;
+
+        for (i = 0; i < 3; ++i) {
+            this.spawnAtLocation(this.getBoatType().getPlanks());
+        }
+
+        for (i = 0; i < 2; ++i) {
+            this.spawnAtLocation(Items.STICK);
+        }
+
+        this.spawnAtLocation(Items.CHEST);
+    }
+    // Prismarine end
+
     @Override
     public void openCustomInventoryScreen(Player player) {
         player.openMenu(this);
diff --git a/src/main/java/net/prismarineteam/prismarine/PrismarineWorldConfig.java b/src/main/java/net/prismarineteam/prismarine/PrismarineWorldConfig.java
index 69901d7855af3ceaf0890ccb2811e41f513bff5f..2ded0f556bef879bd0c0da0c53b04c2c8315ab5d 100644
--- a/src/main/java/net/prismarineteam/prismarine/PrismarineWorldConfig.java
+++ b/src/main/java/net/prismarineteam/prismarine/PrismarineWorldConfig.java
@@ -85,4 +85,9 @@ public class PrismarineWorldConfig {
     private void timerTimeOut() {
         timerTimeOut = getInt("timer-time-out", timerTimeOut);
     }
+
+    public boolean boatBreakWhenLand = false;
+    private void boatSettings() {
+        boatBreakWhenLand = getBoolean("entity.boat.break-when-land", boatBreakWhenLand);
+    }
 }
\ No newline at end of file
